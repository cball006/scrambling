{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cball\\\\Desktop\\\\scrambling\\\\golf-scorecard-app\\\\src\\\\components\\\\Leaderboard.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Leaderboard = ({\n  players,\n  strokes,\n  shotTypes,\n  goToGame\n}) => {\n  const shotTypeOptions = ['Drive', 'Par 3', 'Hybrid', 'Iron', 'Approach', 'Chip', 'Putt']; // Exclude \"Water Hazard\"\n\n  const calculateScores = () => {\n    const scores = {};\n\n    // Initialize scores for each player and shot type\n    players.forEach(player => {\n      scores[player] = {};\n      shotTypeOptions.forEach(shotType => {\n        scores[player][shotType] = 0;\n      });\n    });\n\n    // Calculate scores based on strokes and shot types\n    strokes.forEach((hole, holeIndex) => {\n      hole.forEach((player, strokeIndex) => {\n        var _shotTypes$holeIndex;\n        const shotType = (_shotTypes$holeIndex = shotTypes[holeIndex]) === null || _shotTypes$holeIndex === void 0 ? void 0 : _shotTypes$holeIndex[strokeIndex];\n        if (player && shotType && shotTypeOptions.includes(shotType)) {\n          scores[player][shotType] += 1; // Increment the score for the player and shot type\n        }\n      });\n    });\n    return scores;\n  };\n  const scores = calculateScores();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        margin: '0 auto',\n        borderCollapse: 'collapse',\n        width: '90%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Player\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), shotTypeOptions.map(shotType => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: shotType\n          }, shotType, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: players.map(player => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: player\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), shotTypeOptions.map(shotType => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: scores[player][shotType]\n          }, shotType, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: shotTypeOptions.reduce((total, shotType) => total + scores[player][shotType], 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)]\n        }, player, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goToGame,\n      style: {\n        marginTop: '20px',\n        padding: '10px 20px',\n        backgroundColor: '#1976d2',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px',\n        cursor: 'pointer'\n      },\n      children: \"Back to Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Leaderboard","players","strokes","shotTypes","goToGame","shotTypeOptions","calculateScores","scores","forEach","player","shotType","hole","holeIndex","strokeIndex","_shotTypes$holeIndex","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","style","margin","borderCollapse","width","map","reduce","total","onClick","marginTop","padding","backgroundColor","color","border","borderRadius","cursor","_c","$RefreshReg$"],"sources":["C:/Users/cball/Desktop/scrambling/golf-scorecard-app/src/components/Leaderboard.tsx"],"sourcesContent":["import React from 'react';\r\n\r\ninterface LeaderboardProps {\r\n    players: string[];\r\n    strokes: string[][];\r\n    shotTypes: string[][];\r\n    goToGame: () => void;\r\n}\r\n\r\nconst Leaderboard: React.FC<LeaderboardProps> = ({ players, strokes, shotTypes, goToGame }) => {\r\n    const shotTypeOptions = [\r\n        'Drive',\r\n        'Par 3',\r\n        'Hybrid',\r\n        'Iron',\r\n        'Approach',\r\n        'Chip',\r\n        'Putt',\r\n    ]; // Exclude \"Water Hazard\"\r\n\r\n    const calculateScores = () => {\r\n        const scores: { [player: string]: { [shotType: string]: number } } = {};\r\n\r\n        // Initialize scores for each player and shot type\r\n        players.forEach((player) => {\r\n            scores[player] = {};\r\n            shotTypeOptions.forEach((shotType) => {\r\n                scores[player][shotType] = 0;\r\n            });\r\n        });\r\n\r\n        // Calculate scores based on strokes and shot types\r\n        strokes.forEach((hole, holeIndex) => {\r\n            hole.forEach((player, strokeIndex) => {\r\n                const shotType = shotTypes[holeIndex]?.[strokeIndex];\r\n                if (player && shotType && shotTypeOptions.includes(shotType)) {\r\n                    scores[player][shotType] += 1; // Increment the score for the player and shot type\r\n                }\r\n            });\r\n        });\r\n\r\n        return scores;\r\n    };\r\n\r\n    const scores = calculateScores();\r\n\r\n    return (\r\n        <div>\r\n            <h1>Leaderboard</h1>\r\n            <table style={{ margin: '0 auto', borderCollapse: 'collapse', width: '90%' }}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Player</th>\r\n                        {shotTypeOptions.map((shotType) => (\r\n                            <th key={shotType}>{shotType}</th>\r\n                        ))}\r\n                        <th>Total</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {players.map((player) => (\r\n                        <tr key={player}>\r\n                            <td>{player}</td>\r\n                            {shotTypeOptions.map((shotType) => (\r\n                                <td key={shotType}>{scores[player][shotType]}</td>\r\n                            ))}\r\n                            <td>\r\n                                {shotTypeOptions.reduce(\r\n                                    (total, shotType) => total + scores[player][shotType],\r\n                                    0\r\n                                )}\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <button\r\n                onClick={goToGame}\r\n                style={{\r\n                    marginTop: '20px',\r\n                    padding: '10px 20px',\r\n                    backgroundColor: '#1976d2',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    borderRadius: '5px',\r\n                    cursor: 'pointer',\r\n                }}\r\n            >\r\n                Back to Game\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Leaderboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}