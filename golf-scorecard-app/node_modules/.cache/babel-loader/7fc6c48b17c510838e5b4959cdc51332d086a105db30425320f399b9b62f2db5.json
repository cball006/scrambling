{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cball\\\\Desktop\\\\scrambling\\\\golf-scorecard-app\\\\src\\\\components\\\\Game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = ({\n  players,\n  strokes,\n  setStrokes,\n  shotTypes,\n  setShotTypes,\n  currentHole,\n  setCurrentHole,\n  goToLeaderboard,\n  courseInfo\n}) => {\n  _s();\n  var _strokes;\n  const shotTypeOptions = ['Drive', 'Par 3', 'Hybrid', 'Iron', 'Approach', 'Chip', 'Putt', 'Gimme',\n  // Added Gimme as a shot type option\n  'Water Hazard'];\n\n  // Calculate the cumulative strokes across all holes\n  const totalStrokes = shotTypes.reduce((total, hole) => {\n    return total + hole.reduce((holeTotal, stroke) => {\n      // Count only strokes where a shot type is selected\n      return holeTotal + (stroke[0] ? 1 : 0);\n    }, 0);\n  }, 0);\n  const addStroke = () => {\n    const updatedStrokes = [...strokes];\n    const updatedShotTypes = [...shotTypes];\n    if (!updatedStrokes[currentHole - 1]) {\n      updatedStrokes[currentHole - 1] = [];\n    }\n    if (!updatedShotTypes[currentHole - 1]) {\n      updatedShotTypes[currentHole - 1] = [];\n    }\n    updatedStrokes[currentHole - 1].push([]); // Add a new stroke for the current hole\n    updatedShotTypes[currentHole - 1].push([]); // Add a new shot type for the current hole\n\n    setStrokes(updatedStrokes);\n    setShotTypes(updatedShotTypes);\n  };\n  const removeStroke = strokeIndex => {\n    const updatedStrokes = [...strokes];\n    const updatedShotTypes = [...shotTypes];\n    if (updatedStrokes[currentHole - 1]) {\n      updatedStrokes[currentHole - 1].splice(strokeIndex, 1); // Remove the stroke\n    }\n    if (updatedShotTypes[currentHole - 1]) {\n      updatedShotTypes[currentHole - 1].splice(strokeIndex, 1); // Remove the shot type\n    }\n    setStrokes(updatedStrokes);\n    setShotTypes(updatedShotTypes);\n  };\n  const togglePlayerForStroke = (strokeIndex, playerName) => {\n    const updatedStrokes = [...strokes];\n    const currentStrokePlayers = updatedStrokes[currentHole - 1][strokeIndex] || [];\n    if (currentStrokePlayers.includes(playerName)) {\n      // Remove the player if already selected\n      updatedStrokes[currentHole - 1][strokeIndex] = currentStrokePlayers.filter(name => name !== playerName);\n    } else {\n      // Add the player if not already selected\n      updatedStrokes[currentHole - 1][strokeIndex] = [...currentStrokePlayers, playerName];\n    }\n    setStrokes(updatedStrokes);\n  };\n  const selectShotType = (strokeIndex, shotType) => {\n    const updatedShotTypes = [...shotTypes];\n    const currentPlayers = strokes[currentHole - 1][strokeIndex] || [];\n    if (shotType === 'Gimme' || shotType === 'Water Hazard') {\n      // Allow \"Gimme\" and \"Water Hazard\" to be selected without players\n      updatedShotTypes[currentHole - 1][strokeIndex] = [shotType];\n    } else {\n      // Assign the shot type to each selected player for this stroke\n      updatedShotTypes[currentHole - 1][strokeIndex] = currentPlayers.map(() => shotType);\n    }\n    setShotTypes(updatedShotTypes);\n  };\n  const nextHole = () => {\n    if (currentHole < 18) {\n      setCurrentHole(currentHole + 1);\n\n      // Initialize strokes and shot types for the next hole if not already present\n      if (!strokes[currentHole]) {\n        setStrokes([...strokes, []]);\n      }\n      if (!shotTypes[currentHole]) {\n        setShotTypes([...shotTypes, []]);\n      }\n    } else {\n      alert('Game Over!');\n    }\n  };\n  const previousHole = () => {\n    if (currentHole > 1) {\n      setCurrentHole(currentHole - 1);\n    }\n  };\n\n  // Add local state for editable par\n  const [editablePar, setEditablePar] = useState(courseInfo.par[currentHole - 1]);\n\n  // Update editablePar when hole changes\n  React.useEffect(() => {\n    setEditablePar(courseInfo.par[currentHole - 1]);\n  }, [currentHole, courseInfo.par]);\n\n  // Update par in courseInfo when changed\n  const handleParChange = e => {\n    const newPar = Number(e.target.value);\n    setEditablePar(newPar);\n\n    // Update the courseInfo.par array\n    const updatedPar = [...courseInfo.par];\n    updatedPar[currentHole - 1] = newPar;\n    courseInfo.par = updatedPar;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      maxWidth: '1200px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        color: '#2380d7',\n        marginBottom: 0\n      },\n      children: courseInfo.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        marginTop: 32,\n        marginBottom: 24\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '18px 5vw',\n          background: '#e3f2fd',\n          borderRadius: '12px',\n          fontSize: 'clamp(1.2rem, 6vw, 2rem)',\n          color: '#1976d2',\n          fontWeight: 'bold',\n          boxShadow: '0 2px 8px rgba(25, 118, 210, 0.08)',\n          textAlign: 'center',\n          minWidth: 120,\n          marginBottom: 16,\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexWrap: 'wrap',\n          gap: '1vw',\n          maxWidth: '95vw'\n        },\n        children: [\"Hole \", currentHole, \" \\xA0|\\xA0 Par\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: editablePar,\n          min: 1,\n          max: 10,\n          onChange: handleParChange,\n          style: {\n            width: '3em',\n            fontSize: 'clamp(1rem, 5vw, 1.5rem)',\n            textAlign: 'center',\n            border: '1px solid #1976d2',\n            borderRadius: '6px',\n            marginLeft: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#fffde7',\n          borderRadius: '12px',\n          padding: '10px 24px',\n          color: '#f9a825',\n          fontWeight: 'bold',\n          fontSize: '1rem',\n          boxShadow: '0 2px 8px rgba(249, 168, 37, 0.08)',\n          minWidth: 120,\n          textAlign: 'center'\n        },\n        children: [\"Total Strokes: \", totalStrokes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflowX: 'auto',\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          margin: '0 auto',\n          borderCollapse: 'collapse',\n          width: '100%',\n          maxWidth: '100%',\n          backgroundColor: '#ffffff',\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: '#1976d2',\n              color: 'white'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '10px',\n                textAlign: 'left',\n                whiteSpace: 'nowrap'\n              },\n              children: \"Stroke\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '10px',\n                textAlign: 'left',\n                whiteSpace: 'nowrap'\n              },\n              children: \"Player\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '10px',\n                textAlign: 'left',\n                whiteSpace: 'nowrap'\n              },\n              children: \"Shot Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: (_strokes = strokes[currentHole - 1]) === null || _strokes === void 0 ? void 0 : _strokes.map((strokePlayers, index) => {\n            var _shotTypes, _shotTypes$index;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: '10px',\n                  border: '1px solid #ccc',\n                  whiteSpace: 'nowrap'\n                },\n                children: [\"Stroke \", index + 1, ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: () => removeStroke(index),\n                  style: {\n                    cursor: 'pointer',\n                    color: 'red',\n                    marginLeft: '10px',\n                    fontSize: '1.2rem'\n                  },\n                  title: \"Remove Stroke\",\n                  children: \"\\uD83D\\uDDD1\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: '10px',\n                  border: '1px solid #ccc',\n                  whiteSpace: 'nowrap'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    flexDirection: 'column',\n                    gap: '5px'\n                  },\n                  children: players.map(playerName => /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => togglePlayerForStroke(index, playerName),\n                    style: {\n                      padding: '10px',\n                      backgroundColor: strokePlayers !== null && strokePlayers !== void 0 && strokePlayers.includes(playerName) ? '#1976d2' : '#ccc',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '5px',\n                      cursor: 'pointer',\n                      textAlign: 'center'\n                    },\n                    children: playerName\n                  }, playerName, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: '10px',\n                  border: '1px solid #ccc',\n                  whiteSpace: 'nowrap'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: ((_shotTypes = shotTypes[currentHole - 1]) === null || _shotTypes === void 0 ? void 0 : (_shotTypes$index = _shotTypes[index]) === null || _shotTypes$index === void 0 ? void 0 : _shotTypes$index[0]) || '',\n                  onChange: e => selectShotType(index, e.target.value),\n                  style: {\n                    padding: '5px',\n                    fontSize: '14px',\n                    borderRadius: '5px',\n                    border: '1px solid #ccc',\n                    maxWidth: '150px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    disabled: true,\n                    children: \"Select Shot Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 41\n                  }, this), shotTypeOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: option,\n                    children: option\n                  }, option, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 45\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 33\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addStroke,\n        style: {\n          padding: '10px 20px',\n          margin: '10px',\n          backgroundColor: '#1976d2',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: \"Add Stroke\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: previousHole,\n        disabled: currentHole === 1,\n        style: {\n          padding: '10px 20px',\n          margin: '10px',\n          backgroundColor: currentHole === 1 ? '#ccc' : '#1976d2',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: currentHole === 1 ? 'not-allowed' : 'pointer'\n        },\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextHole,\n        style: {\n          padding: '10px 20px',\n          margin: '10px',\n          backgroundColor: '#1976d2',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: currentHole < 18 ? 'Next Hole' : 'Finish Game'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToLeaderboard,\n        style: {\n          padding: '10px 20px',\n          margin: '10px',\n          backgroundColor: '#1976d2',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: \"Leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"ZrNEA51YxM4OPFvL+Wmmd68iO9A=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Game","players","strokes","setStrokes","shotTypes","setShotTypes","currentHole","setCurrentHole","goToLeaderboard","courseInfo","_s","_strokes","shotTypeOptions","totalStrokes","reduce","total","hole","holeTotal","stroke","addStroke","updatedStrokes","updatedShotTypes","push","removeStroke","strokeIndex","splice","togglePlayerForStroke","playerName","currentStrokePlayers","includes","filter","name","selectShotType","shotType","currentPlayers","map","nextHole","alert","previousHole","editablePar","setEditablePar","par","useEffect","handleParChange","e","newPar","Number","target","value","updatedPar","style","padding","maxWidth","margin","children","textAlign","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","alignItems","marginTop","background","borderRadius","fontSize","fontWeight","boxShadow","minWidth","justifyContent","flexWrap","gap","type","min","max","onChange","width","border","marginLeft","overflowX","borderCollapse","backgroundColor","whiteSpace","strokePlayers","index","_shotTypes","_shotTypes$index","onClick","cursor","title","disabled","option","_c","$RefreshReg$"],"sources":["C:/Users/cball/Desktop/scrambling/golf-scorecard-app/src/components/Game.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Hole from './Hole';\r\n\r\ninterface GameProps {\r\n    players: string[];\r\n    strokes: string[][][]; // Tracks selected players for each stroke\r\n    setStrokes: React.Dispatch<React.SetStateAction<string[][][]>>;\r\n    shotTypes: string[][][]; // Tracks shot types for each stroke\r\n    setShotTypes: React.Dispatch<React.SetStateAction<string[][][]>>;\r\n    currentHole: number;\r\n    setCurrentHole: React.Dispatch<React.SetStateAction<number>>;\r\n    goToLeaderboard: () => void;\r\n    courseInfo: {\r\n        name: string;\r\n        par: number[];      // <-- Fix: should be array\r\n        yardage: number[];  // <-- Fix: should be array\r\n    };\r\n}\r\n\r\nconst Game: React.FC<GameProps> = ({\r\n    players,\r\n    strokes,\r\n    setStrokes,\r\n    shotTypes,\r\n    setShotTypes,\r\n    currentHole,\r\n    setCurrentHole,\r\n    goToLeaderboard,\r\n    courseInfo,\r\n}) => {\r\n    const shotTypeOptions = [\r\n        'Drive',\r\n        'Par 3',\r\n        'Hybrid',\r\n        'Iron',\r\n        'Approach',\r\n        'Chip',\r\n        'Putt',\r\n        'Gimme', // Added Gimme as a shot type option\r\n        'Water Hazard',\r\n    ];\r\n\r\n    // Calculate the cumulative strokes across all holes\r\n    const totalStrokes = shotTypes.reduce((total, hole) => {\r\n        return (\r\n            total +\r\n            hole.reduce((holeTotal, stroke) => {\r\n                // Count only strokes where a shot type is selected\r\n                return holeTotal + (stroke[0] ? 1 : 0);\r\n            }, 0)\r\n        );\r\n    }, 0);\r\n\r\n    const addStroke = () => {\r\n        const updatedStrokes = [...strokes];\r\n        const updatedShotTypes = [...shotTypes];\r\n\r\n        if (!updatedStrokes[currentHole - 1]) {\r\n            updatedStrokes[currentHole - 1] = [];\r\n        }\r\n        if (!updatedShotTypes[currentHole - 1]) {\r\n            updatedShotTypes[currentHole - 1] = [];\r\n        }\r\n\r\n        updatedStrokes[currentHole - 1].push([]); // Add a new stroke for the current hole\r\n        updatedShotTypes[currentHole - 1].push([]); // Add a new shot type for the current hole\r\n\r\n        setStrokes(updatedStrokes);\r\n        setShotTypes(updatedShotTypes);\r\n    };\r\n\r\n    const removeStroke = (strokeIndex: number) => {\r\n        const updatedStrokes = [...strokes];\r\n        const updatedShotTypes = [...shotTypes];\r\n\r\n        if (updatedStrokes[currentHole - 1]) {\r\n            updatedStrokes[currentHole - 1].splice(strokeIndex, 1); // Remove the stroke\r\n        }\r\n        if (updatedShotTypes[currentHole - 1]) {\r\n            updatedShotTypes[currentHole - 1].splice(strokeIndex, 1); // Remove the shot type\r\n        }\r\n\r\n        setStrokes(updatedStrokes);\r\n        setShotTypes(updatedShotTypes);\r\n    };\r\n\r\n    const togglePlayerForStroke = (strokeIndex: number, playerName: string) => {\r\n        const updatedStrokes = [...strokes];\r\n        const currentStrokePlayers = updatedStrokes[currentHole - 1][strokeIndex] || [];\r\n\r\n        if (currentStrokePlayers.includes(playerName)) {\r\n            // Remove the player if already selected\r\n            updatedStrokes[currentHole - 1][strokeIndex] = currentStrokePlayers.filter(\r\n                (name) => name !== playerName\r\n            );\r\n        } else {\r\n            // Add the player if not already selected\r\n            updatedStrokes[currentHole - 1][strokeIndex] = [...currentStrokePlayers, playerName];\r\n        }\r\n\r\n        setStrokes(updatedStrokes);\r\n    };\r\n\r\n    const selectShotType = (strokeIndex: number, shotType: string) => {\r\n        const updatedShotTypes = [...shotTypes];\r\n        const currentPlayers = strokes[currentHole - 1][strokeIndex] || [];\r\n\r\n        if (shotType === 'Gimme' || shotType === 'Water Hazard') {\r\n            // Allow \"Gimme\" and \"Water Hazard\" to be selected without players\r\n            updatedShotTypes[currentHole - 1][strokeIndex] = [shotType];\r\n        } else {\r\n            // Assign the shot type to each selected player for this stroke\r\n            updatedShotTypes[currentHole - 1][strokeIndex] = currentPlayers.map(() => shotType);\r\n        }\r\n\r\n        setShotTypes(updatedShotTypes);\r\n    };\r\n\r\n    const nextHole = () => {\r\n        if (currentHole < 18) {\r\n            setCurrentHole(currentHole + 1);\r\n\r\n            // Initialize strokes and shot types for the next hole if not already present\r\n            if (!strokes[currentHole]) {\r\n                setStrokes([...strokes, []]);\r\n            }\r\n            if (!shotTypes[currentHole]) {\r\n                setShotTypes([...shotTypes, []]);\r\n            }\r\n        } else {\r\n            alert('Game Over!');\r\n        }\r\n    };\r\n\r\n    const previousHole = () => {\r\n        if (currentHole > 1) {\r\n            setCurrentHole(currentHole - 1);\r\n        }\r\n    };\r\n\r\n    // Add local state for editable par\r\n    const [editablePar, setEditablePar] = useState<number>(courseInfo.par[currentHole - 1]);\r\n\r\n    // Update editablePar when hole changes\r\n    React.useEffect(() => {\r\n        setEditablePar(courseInfo.par[currentHole - 1]);\r\n    }, [currentHole, courseInfo.par]);\r\n\r\n    // Update par in courseInfo when changed\r\n    const handleParChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const newPar = Number(e.target.value);\r\n        setEditablePar(newPar);\r\n\r\n        // Update the courseInfo.par array\r\n        const updatedPar = [...courseInfo.par];\r\n        updatedPar[currentHole - 1] = newPar;\r\n        courseInfo.par = updatedPar;\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: '20px', maxWidth: '1200px', margin: '0 auto' }}>\r\n            <h1 style={{ textAlign: 'center', color: '#2380d7', marginBottom: 0 }}>{courseInfo.name}</h1>\r\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: 32, marginBottom: 24 }}>\r\n                <div\r\n                    style={{\r\n                        padding: '18px 5vw',\r\n                        background: '#e3f2fd',\r\n                        borderRadius: '12px',\r\n                        fontSize: 'clamp(1.2rem, 6vw, 2rem)',\r\n                        color: '#1976d2',\r\n                        fontWeight: 'bold',\r\n                        boxShadow: '0 2px 8px rgba(25, 118, 210, 0.08)',\r\n                        textAlign: 'center',\r\n                        minWidth: 120,\r\n                        marginBottom: 16,\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        flexWrap: 'wrap',\r\n                        gap: '1vw',\r\n                        maxWidth: '95vw',\r\n                    }}\r\n                >\r\n                    Hole {currentHole} &nbsp;|&nbsp; Par{' '}\r\n                    <input\r\n                        type=\"number\"\r\n                        value={editablePar}\r\n                        min={1}\r\n                        max={10}\r\n                        onChange={handleParChange}\r\n                        style={{\r\n                            width: '3em',\r\n                            fontSize: 'clamp(1rem, 5vw, 1.5rem)',\r\n                            textAlign: 'center',\r\n                            border: '1px solid #1976d2',\r\n                            borderRadius: '6px',\r\n                            marginLeft: 8,\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div\r\n                    style={{\r\n                        background: '#fffde7',\r\n                        borderRadius: '12px',\r\n                        padding: '10px 24px',\r\n                        color: '#f9a825',\r\n                        fontWeight: 'bold',\r\n                        fontSize: '1rem',\r\n                        boxShadow: '0 2px 8px rgba(249, 168, 37, 0.08)',\r\n                        minWidth: 120,\r\n                        textAlign: 'center'\r\n                    }}\r\n                >\r\n                    Total Strokes: {totalStrokes}\r\n                </div>\r\n            </div>\r\n            <div style={{ overflowX: 'auto', marginBottom: '20px' }}>\r\n                <table\r\n                    style={{\r\n                        margin: '0 auto',\r\n                        borderCollapse: 'collapse',\r\n                        width: '100%',\r\n                        maxWidth: '100%',\r\n                        backgroundColor: '#ffffff',\r\n                        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n                    }}\r\n                >\r\n                    <thead>\r\n                        <tr style={{ backgroundColor: '#1976d2', color: 'white' }}>\r\n                            <th style={{ padding: '10px', textAlign: 'left', whiteSpace: 'nowrap' }}>Stroke</th>\r\n                            <th style={{ padding: '10px', textAlign: 'left', whiteSpace: 'nowrap' }}>Player</th>\r\n                            <th style={{ padding: '10px', textAlign: 'left', whiteSpace: 'nowrap' }}>Shot Type</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {strokes[currentHole - 1]?.map((strokePlayers, index) => (\r\n                            <tr key={index}>\r\n                                <td style={{ padding: '10px', border: '1px solid #ccc', whiteSpace: 'nowrap' }}>\r\n                                    Stroke {index + 1}{' '}\r\n                                    <span\r\n                                        onClick={() => removeStroke(index)}\r\n                                        style={{\r\n                                            cursor: 'pointer',\r\n                                            color: 'red',\r\n                                            marginLeft: '10px',\r\n                                            fontSize: '1.2rem',\r\n                                        }}\r\n                                        title=\"Remove Stroke\"\r\n                                    >\r\n                                        🗑️\r\n                                    </span>\r\n                                </td>\r\n                                <td style={{ padding: '10px', border: '1px solid #ccc', whiteSpace: 'nowrap' }}>\r\n                                    <div style={{ display: 'flex', flexDirection: 'column', gap: '5px' }}>\r\n                                        {players.map((playerName) => (\r\n                                            <button\r\n                                                key={playerName}\r\n                                                onClick={() => togglePlayerForStroke(index, playerName)}\r\n                                                style={{\r\n                                                    padding: '10px',\r\n                                                    backgroundColor: strokePlayers?.includes(playerName)\r\n                                                        ? '#1976d2'\r\n                                                        : '#ccc',\r\n                                                    color: 'white',\r\n                                                    border: 'none',\r\n                                                    borderRadius: '5px',\r\n                                                    cursor: 'pointer',\r\n                                                    textAlign: 'center',\r\n                                                }}\r\n                                            >\r\n                                                {playerName}\r\n                                            </button>\r\n                                        ))}\r\n                                    </div>\r\n                                </td>\r\n                                <td style={{ padding: '10px', border: '1px solid #ccc', whiteSpace: 'nowrap' }}>\r\n                                    <select\r\n                                        value={shotTypes[currentHole - 1]?.[index]?.[0] || ''}\r\n                                        onChange={(e) => selectShotType(index, e.target.value)}\r\n                                        style={{\r\n                                            padding: '5px',\r\n                                            fontSize: '14px',\r\n                                            borderRadius: '5px',\r\n                                            border: '1px solid #ccc',\r\n                                            maxWidth: '150px',\r\n                                        }}\r\n                                    >\r\n                                        <option value=\"\" disabled>\r\n                                            Select Shot Type\r\n                                        </option>\r\n                                        {shotTypeOptions.map((option) => (\r\n                                            <option key={option} value={option}>\r\n                                                {option}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div style={{ textAlign: 'center' }}>\r\n                <button\r\n                    onClick={addStroke}\r\n                    style={{\r\n                        padding: '10px 20px',\r\n                        margin: '10px',\r\n                        backgroundColor: '#1976d2',\r\n                        color: 'white',\r\n                        border: 'none',\r\n                        borderRadius: '5px',\r\n                        cursor: 'pointer',\r\n                    }}\r\n                >\r\n                    Add Stroke\r\n                </button>\r\n                <button\r\n                    onClick={previousHole}\r\n                    disabled={currentHole === 1}\r\n                    style={{\r\n                        padding: '10px 20px',\r\n                        margin: '10px',\r\n                        backgroundColor: currentHole === 1 ? '#ccc' : '#1976d2',\r\n                        color: 'white',\r\n                        border: 'none',\r\n                        borderRadius: '5px',\r\n                        cursor: currentHole === 1 ? 'not-allowed' : 'pointer',\r\n                    }}\r\n                >\r\n                    Back\r\n                </button>\r\n                <button\r\n                    onClick={nextHole}\r\n                    style={{\r\n                        padding: '10px 20px',\r\n                        margin: '10px',\r\n                        backgroundColor: '#1976d2',\r\n                        color: 'white',\r\n                        border: 'none',\r\n                        borderRadius: '5px',\r\n                        cursor: 'pointer',\r\n                    }}\r\n                >\r\n                    {currentHole < 18 ? 'Next Hole' : 'Finish Game'}\r\n                </button>\r\n                <button\r\n                    onClick={goToLeaderboard}\r\n                    style={{\r\n                        padding: '10px 20px',\r\n                        margin: '10px',\r\n                        backgroundColor: '#1976d2',\r\n                        color: 'white',\r\n                        border: 'none',\r\n                        borderRadius: '5px',\r\n                        cursor: 'pointer',\r\n                    }}\r\n                >\r\n                    Leaderboard\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}