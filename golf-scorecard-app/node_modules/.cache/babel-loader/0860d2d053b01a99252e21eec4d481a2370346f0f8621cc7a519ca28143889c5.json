{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cball\\\\Desktop\\\\scrambling\\\\golf-scorecard-app\\\\src\\\\components\\\\Game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = ({\n  players\n}) => {\n  _s();\n  const [currentHole, setCurrentHole] = useState(1);\n  const [strokes, setStrokes] = useState([[]]); // Tracks which player's ball was used for each stroke\n\n  const addStroke = () => {\n    const updatedStrokes = [...strokes];\n    updatedStrokes[currentHole - 1].push(''); // Add a new stroke for the current hole\n    setStrokes(updatedStrokes);\n  };\n  const markPlayerForStroke = (strokeIndex, playerName) => {\n    const updatedStrokes = [...strokes];\n    updatedStrokes[currentHole - 1][strokeIndex] = playerName; // Mark the player for the stroke\n    setStrokes(updatedStrokes);\n  };\n  const nextHole = () => {\n    if (currentHole < 18) {\n      setCurrentHole(currentHole + 1);\n      if (!strokes[currentHole]) {\n        setStrokes([...strokes, []]); // Initialize strokes for the next hole\n      }\n    } else {\n      alert('Game Over!');\n    }\n  };\n  const previousHole = () => {\n    if (currentHole > 1) {\n      setCurrentHole(currentHole - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hole \", currentHole]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        margin: '0 auto',\n        borderCollapse: 'collapse',\n        width: '80%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              border: '1px solid #ccc',\n              padding: '10px'\n            },\n            children: \"Stroke\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              border: '1px solid #ccc',\n              padding: '10px'\n            },\n            children: \"Player\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              border: '1px solid #ccc',\n              padding: '10px'\n            },\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: strokes[currentHole - 1].map((player, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: '1px solid #ccc',\n              padding: '10px'\n            },\n            children: [\"Stroke \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: '1px solid #ccc',\n              padding: '10px'\n            },\n            children: player || 'Unassigned'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: '1px solid #ccc',\n              padding: '10px'\n            },\n            children: players.map(playerName => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => markPlayerForStroke(index, playerName),\n              style: {\n                padding: '5px 10px',\n                margin: '5px',\n                backgroundColor: '#1976d2',\n                color: 'white',\n                border: 'none',\n                borderRadius: '5px',\n                cursor: 'pointer'\n              },\n              children: playerName\n            }, playerName, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addStroke,\n      style: {\n        marginTop: '20px',\n        padding: '10px 20px',\n        backgroundColor: '#1976d2',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px',\n        cursor: 'pointer'\n      },\n      children: \"Add Stroke\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: previousHole,\n        style: {\n          padding: '10px 20px',\n          backgroundColor: '#1976d2',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer',\n          marginRight: '10px'\n        },\n        disabled: currentHole === 1 // Disable \"Back\" button on the first hole\n        ,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextHole,\n        style: {\n          padding: '10px 20px',\n          backgroundColor: '#1976d2',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: currentHole < 18 ? 'Next Hole' : 'Finish Game'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"t6W8R+D4i46SzM/lfJbSmACWSQk=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Game","players","_s","currentHole","setCurrentHole","strokes","setStrokes","addStroke","updatedStrokes","push","markPlayerForStroke","strokeIndex","playerName","nextHole","alert","previousHole","children","fileName","_jsxFileName","lineNumber","columnNumber","style","margin","borderCollapse","width","border","padding","map","player","index","onClick","backgroundColor","color","borderRadius","cursor","marginTop","marginRight","disabled","_c","$RefreshReg$"],"sources":["C:/Users/cball/Desktop/scrambling/golf-scorecard-app/src/components/Game.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\ninterface GameProps {\r\n    players: string[];\r\n}\r\n\r\nconst Game: React.FC<GameProps> = ({ players }) => {\r\n    const [currentHole, setCurrentHole] = useState(1);\r\n    const [strokes, setStrokes] = useState<string[][]>([[]]); // Tracks which player's ball was used for each stroke\r\n\r\n    const addStroke = () => {\r\n        const updatedStrokes = [...strokes];\r\n        updatedStrokes[currentHole - 1].push(''); // Add a new stroke for the current hole\r\n        setStrokes(updatedStrokes);\r\n    };\r\n\r\n    const markPlayerForStroke = (strokeIndex: number, playerName: string) => {\r\n        const updatedStrokes = [...strokes];\r\n        updatedStrokes[currentHole - 1][strokeIndex] = playerName; // Mark the player for the stroke\r\n        setStrokes(updatedStrokes);\r\n    };\r\n\r\n    const nextHole = () => {\r\n        if (currentHole < 18) {\r\n            setCurrentHole(currentHole + 1);\r\n            if (!strokes[currentHole]) {\r\n                setStrokes([...strokes, []]); // Initialize strokes for the next hole\r\n            }\r\n        } else {\r\n            alert('Game Over!');\r\n        }\r\n    };\r\n\r\n    const previousHole = () => {\r\n        if (currentHole > 1) {\r\n            setCurrentHole(currentHole - 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Hole {currentHole}</h1>\r\n            <table style={{ margin: '0 auto', borderCollapse: 'collapse', width: '80%' }}>\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{ border: '1px solid #ccc', padding: '10px' }}>Stroke</th>\r\n                        <th style={{ border: '1px solid #ccc', padding: '10px' }}>Player</th>\r\n                        <th style={{ border: '1px solid #ccc', padding: '10px' }}>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {strokes[currentHole - 1].map((player, index) => (\r\n                        <tr key={index}>\r\n                            <td style={{ border: '1px solid #ccc', padding: '10px' }}>\r\n                                Stroke {index + 1}\r\n                            </td>\r\n                            <td style={{ border: '1px solid #ccc', padding: '10px' }}>\r\n                                {player || 'Unassigned'}\r\n                            </td>\r\n                            <td style={{ border: '1px solid #ccc', padding: '10px' }}>\r\n                                {players.map((playerName) => (\r\n                                    <button\r\n                                        key={playerName}\r\n                                        onClick={() => markPlayerForStroke(index, playerName)}\r\n                                        style={{\r\n                                            padding: '5px 10px',\r\n                                            margin: '5px',\r\n                                            backgroundColor: '#1976d2',\r\n                                            color: 'white',\r\n                                            border: 'none',\r\n                                            borderRadius: '5px',\r\n                                            cursor: 'pointer',\r\n                                        }}\r\n                                    >\r\n                                        {playerName}\r\n                                    </button>\r\n                                ))}\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <button\r\n                onClick={addStroke}\r\n                style={{\r\n                    marginTop: '20px',\r\n                    padding: '10px 20px',\r\n                    backgroundColor: '#1976d2',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    borderRadius: '5px',\r\n                    cursor: 'pointer',\r\n                }}\r\n            >\r\n                Add Stroke\r\n            </button>\r\n            <div style={{ marginTop: '20px' }}>\r\n                <button\r\n                    onClick={previousHole}\r\n                    style={{\r\n                        padding: '10px 20px',\r\n                        backgroundColor: '#1976d2',\r\n                        color: 'white',\r\n                        border: 'none',\r\n                        borderRadius: '5px',\r\n                        cursor: 'pointer',\r\n                        marginRight: '10px',\r\n                    }}\r\n                    disabled={currentHole === 1} // Disable \"Back\" button on the first hole\r\n                >\r\n                    Back\r\n                </button>\r\n                <button\r\n                    onClick={nextHole}\r\n                    style={{\r\n                        padding: '10px 20px',\r\n                        backgroundColor: '#1976d2',\r\n                        color: 'white',\r\n                        border: 'none',\r\n                        borderRadius: '5px',\r\n                        cursor: 'pointer',\r\n                    }}\r\n                >\r\n                    {currentHole < 18 ? 'Next Hole' : 'Finish Game'}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMxC,MAAMC,IAAyB,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAa,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;EAE1D,MAAMU,SAAS,GAAGA,CAAA,KAAM;IACpB,MAAMC,cAAc,GAAG,CAAC,GAAGH,OAAO,CAAC;IACnCG,cAAc,CAACL,WAAW,GAAG,CAAC,CAAC,CAACM,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1CH,UAAU,CAACE,cAAc,CAAC;EAC9B,CAAC;EAED,MAAME,mBAAmB,GAAGA,CAACC,WAAmB,EAAEC,UAAkB,KAAK;IACrE,MAAMJ,cAAc,GAAG,CAAC,GAAGH,OAAO,CAAC;IACnCG,cAAc,CAACL,WAAW,GAAG,CAAC,CAAC,CAACQ,WAAW,CAAC,GAAGC,UAAU,CAAC,CAAC;IAC3DN,UAAU,CAACE,cAAc,CAAC;EAC9B,CAAC;EAED,MAAMK,QAAQ,GAAGA,CAAA,KAAM;IACnB,IAAIV,WAAW,GAAG,EAAE,EAAE;MAClBC,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;MAC/B,IAAI,CAACE,OAAO,CAACF,WAAW,CAAC,EAAE;QACvBG,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;MAClC;IACJ,CAAC,MAAM;MACHS,KAAK,CAAC,YAAY,CAAC;IACvB;EACJ,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIZ,WAAW,GAAG,CAAC,EAAE;MACjBC,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IACnC;EACJ,CAAC;EAED,oBACIJ,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,GAAI,OAAK,EAACb,WAAW;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC3BrB,OAAA;MAAOsB,KAAK,EAAE;QAAEC,MAAM,EAAE,QAAQ;QAAEC,cAAc,EAAE,UAAU;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAR,QAAA,gBACzEjB,OAAA;QAAAiB,QAAA,eACIjB,OAAA;UAAAiB,QAAA,gBACIjB,OAAA;YAAIsB,KAAK,EAAE;cAAEI,MAAM,EAAE,gBAAgB;cAAEC,OAAO,EAAE;YAAO,CAAE;YAAAV,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrErB,OAAA;YAAIsB,KAAK,EAAE;cAAEI,MAAM,EAAE,gBAAgB;cAAEC,OAAO,EAAE;YAAO,CAAE;YAAAV,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrErB,OAAA;YAAIsB,KAAK,EAAE;cAAEI,MAAM,EAAE,gBAAgB;cAAEC,OAAO,EAAE;YAAO,CAAE;YAAAV,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACRrB,OAAA;QAAAiB,QAAA,EACKX,OAAO,CAACF,WAAW,GAAG,CAAC,CAAC,CAACwB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACxC9B,OAAA;UAAAiB,QAAA,gBACIjB,OAAA;YAAIsB,KAAK,EAAE;cAAEI,MAAM,EAAE,gBAAgB;cAAEC,OAAO,EAAE;YAAO,CAAE;YAAAV,QAAA,GAAC,SAC/C,EAACa,KAAK,GAAG,CAAC;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB,CAAC,eACLrB,OAAA;YAAIsB,KAAK,EAAE;cAAEI,MAAM,EAAE,gBAAgB;cAAEC,OAAO,EAAE;YAAO,CAAE;YAAAV,QAAA,EACpDY,MAAM,IAAI;UAAY;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC,eACLrB,OAAA;YAAIsB,KAAK,EAAE;cAAEI,MAAM,EAAE,gBAAgB;cAAEC,OAAO,EAAE;YAAO,CAAE;YAAAV,QAAA,EACpDf,OAAO,CAAC0B,GAAG,CAAEf,UAAU,iBACpBb,OAAA;cAEI+B,OAAO,EAAEA,CAAA,KAAMpB,mBAAmB,CAACmB,KAAK,EAAEjB,UAAU,CAAE;cACtDS,KAAK,EAAE;gBACHK,OAAO,EAAE,UAAU;gBACnBJ,MAAM,EAAE,KAAK;gBACbS,eAAe,EAAE,SAAS;gBAC1BC,KAAK,EAAE,OAAO;gBACdP,MAAM,EAAE,MAAM;gBACdQ,YAAY,EAAE,KAAK;gBACnBC,MAAM,EAAE;cACZ,CAAE;cAAAlB,QAAA,EAEDJ;YAAU,GAZNA,UAAU;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAaX,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA,GAzBAS,KAAK;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA0BV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACRrB,OAAA;MACI+B,OAAO,EAAEvB,SAAU;MACnBc,KAAK,EAAE;QACHc,SAAS,EAAE,MAAM;QACjBT,OAAO,EAAE,WAAW;QACpBK,eAAe,EAAE,SAAS;QAC1BC,KAAK,EAAE,OAAO;QACdP,MAAM,EAAE,MAAM;QACdQ,YAAY,EAAE,KAAK;QACnBC,MAAM,EAAE;MACZ,CAAE;MAAAlB,QAAA,EACL;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTrB,OAAA;MAAKsB,KAAK,EAAE;QAAEc,SAAS,EAAE;MAAO,CAAE;MAAAnB,QAAA,gBAC9BjB,OAAA;QACI+B,OAAO,EAAEf,YAAa;QACtBM,KAAK,EAAE;UACHK,OAAO,EAAE,WAAW;UACpBK,eAAe,EAAE,SAAS;UAC1BC,KAAK,EAAE,OAAO;UACdP,MAAM,EAAE,MAAM;UACdQ,YAAY,EAAE,KAAK;UACnBC,MAAM,EAAE,SAAS;UACjBE,WAAW,EAAE;QACjB,CAAE;QACFC,QAAQ,EAAElC,WAAW,KAAK,CAAE,CAAC;QAAA;QAAAa,QAAA,EAChC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTrB,OAAA;QACI+B,OAAO,EAAEjB,QAAS;QAClBQ,KAAK,EAAE;UACHK,OAAO,EAAE,WAAW;UACpBK,eAAe,EAAE,SAAS;UAC1BC,KAAK,EAAE,OAAO;UACdP,MAAM,EAAE,MAAM;UACdQ,YAAY,EAAE,KAAK;UACnBC,MAAM,EAAE;QACZ,CAAE;QAAAlB,QAAA,EAEDb,WAAW,GAAG,EAAE,GAAG,WAAW,GAAG;MAAa;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAClB,EAAA,CA1HIF,IAAyB;AAAAsC,EAAA,GAAzBtC,IAAyB;AA4H/B,eAAeA,IAAI;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}