{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cball\\\\Desktop\\\\scrambling\\\\golf-scorecard-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useParams } from 'react-router-dom';\nimport Home from './components/Home';\nimport Leaderboard from './components/Leaderboard';\nimport Hole from './components/Hole';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [strokes, setStrokes] = useState([]);\n  const [shotTypes, setShotTypes] = useState([]);\n  const [currentHole, setCurrentHole] = useState(1);\n  const [selectedCourse, setSelectedCourse] = useState(null);\n  const startGame = (playerNames, courseInfo) => {\n    setPlayers(playerNames);\n    setSelectedCourse(courseInfo);\n    const initialStrokes = Array.from({\n      length: 18\n    }, () => Array.from({\n      length: playerNames.length\n    }, () => []));\n    const initialShotTypes = Array.from({\n      length: 18\n    }, () => Array.from({\n      length: playerNames.length\n    }, () => []));\n    setStrokes(initialStrokes);\n    setShotTypes(initialShotTypes);\n    setCurrentHole(1);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            startGame: startGame\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/hole/:holeNumber\",\n          element: selectedCourse && /*#__PURE__*/_jsxDEV(HoleWrapper, {\n            courseInfo: selectedCourse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/leaderboard\",\n          element: /*#__PURE__*/_jsxDEV(Leaderboard, {\n            players: players,\n            strokes: strokes,\n            shotTypes: shotTypes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n// Wrapper component to handle route params and pass props to Hole\n_s(App, \"eB2+GWKh6Bw/izLPJopGmcpX0gw=\");\n_c = App;\nconst HoleWrapper = ({\n  courseInfo\n}) => {\n  _s2();\n  const {\n    holeNumber\n  } = useParams();\n  const holeIndex = holeNumber ? parseInt(holeNumber, 10) : 1;\n  return /*#__PURE__*/_jsxDEV(Hole, {\n    holeNumber: holeIndex,\n    courseInfo: courseInfo\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 12\n  }, this);\n};\n_s2(HoleWrapper, \"nYJhOKiwnabkfKuLUEppf/FamtQ=\", false, function () {\n  return [useParams];\n});\n_c2 = HoleWrapper;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"HoleWrapper\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","useParams","Home","Leaderboard","Hole","jsxDEV","_jsxDEV","App","_s","players","setPlayers","strokes","setStrokes","shotTypes","setShotTypes","currentHole","setCurrentHole","selectedCourse","setSelectedCourse","startGame","playerNames","courseInfo","initialStrokes","Array","from","length","initialShotTypes","children","className","path","element","fileName","_jsxFileName","lineNumber","columnNumber","HoleWrapper","_c","_s2","holeNumber","holeIndex","parseInt","_c2","$RefreshReg$"],"sources":["C:/Users/cball/Desktop/scrambling/golf-scorecard-app/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, useParams } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport Game from './components/Game';\r\nimport Leaderboard from './components/Leaderboard';\r\nimport Hole from './components/Hole';\r\nimport './App.css';\r\n\r\ninterface CourseInfo {\r\n    name: string;\r\n    par: number[];\r\n}\r\n\r\nconst App: React.FC = () => {\r\n    const [players, setPlayers] = useState<string[]>([]);\r\n    const [strokes, setStrokes] = useState<string[][][]>([]);\r\n    const [shotTypes, setShotTypes] = useState<string[][][]>([]);\r\n    const [currentHole, setCurrentHole] = useState(1);\r\n    const [selectedCourse, setSelectedCourse] = useState<CourseInfo | null>(null);\r\n\r\n    const startGame = (playerNames: string[], courseInfo: CourseInfo | null) => {\r\n        setPlayers(playerNames);\r\n        setSelectedCourse(courseInfo);\r\n\r\n        const initialStrokes = Array.from({ length: 18 }, () =>\r\n            Array.from({ length: playerNames.length }, () => [])\r\n        );\r\n        const initialShotTypes = Array.from({ length: 18 }, () =>\r\n            Array.from({ length: playerNames.length }, () => [])\r\n        );\r\n\r\n        setStrokes(initialStrokes);\r\n        setShotTypes(initialShotTypes);\r\n        setCurrentHole(1);\r\n    };\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"App\">\r\n                <Routes>\r\n                    <Route path=\"/\" element={<Home startGame={startGame} />} />\r\n                    <Route\r\n                        path=\"/hole/:holeNumber\"\r\n                        element={\r\n                            selectedCourse && (\r\n                                <HoleWrapper courseInfo={selectedCourse} />\r\n                            )\r\n                        }\r\n                    />\r\n                    <Route\r\n                        path=\"/leaderboard\"\r\n                        element={\r\n                            <Leaderboard\r\n                                players={players}\r\n                                strokes={strokes}\r\n                                shotTypes={shotTypes}\r\n                            />\r\n                        }\r\n                    />\r\n                </Routes>\r\n            </div>\r\n        </Router>\r\n    );\r\n};\r\n\r\n// Wrapper component to handle route params and pass props to Hole\r\nconst HoleWrapper: React.FC<{ courseInfo: CourseInfo }> = ({ courseInfo }) => {\r\n    const { holeNumber } = useParams<{ holeNumber: string }>();\r\n    const holeIndex = holeNumber ? parseInt(holeNumber, 10) : 1;\r\n\r\n    return <Hole holeNumber={holeIndex} courseInfo={courseInfo} />;\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}