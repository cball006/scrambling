{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cball\\\\Desktop\\\\scrambling\\\\golf-scorecard-app\\\\src\\\\components\\\\Game.tsx\";\nimport React from 'react';\nimport Hole from './Hole';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = ({\n  players,\n  strokes,\n  setStrokes,\n  shotTypes,\n  setShotTypes,\n  currentHole,\n  setCurrentHole,\n  goToLeaderboard,\n  courseInfo\n}) => {\n  var _strokes;\n  const shotTypeOptions = ['Drive', 'Par 3', 'Hybrid', 'Iron', 'Approach', 'Chip', 'Putt', 'Gimme',\n  // Added Gimme as a shot type option\n  'Water Hazard'];\n\n  // Calculate the cumulative strokes across all holes\n  const totalStrokes = shotTypes.reduce((total, hole) => {\n    return total + hole.reduce((holeTotal, stroke) => {\n      // Count only strokes where a shot type is selected\n      return holeTotal + (stroke[0] ? 1 : 0);\n    }, 0);\n  }, 0);\n  const addStroke = () => {\n    const updatedStrokes = [...strokes];\n    const updatedShotTypes = [...shotTypes];\n    if (!updatedStrokes[currentHole - 1]) {\n      updatedStrokes[currentHole - 1] = [];\n    }\n    if (!updatedShotTypes[currentHole - 1]) {\n      updatedShotTypes[currentHole - 1] = [];\n    }\n    updatedStrokes[currentHole - 1].push([]); // Add a new stroke for the current hole\n    updatedShotTypes[currentHole - 1].push([]); // Add a new shot type for the current hole\n\n    setStrokes(updatedStrokes);\n    setShotTypes(updatedShotTypes);\n  };\n  const removeStroke = strokeIndex => {\n    const updatedStrokes = [...strokes];\n    const updatedShotTypes = [...shotTypes];\n    if (updatedStrokes[currentHole - 1]) {\n      updatedStrokes[currentHole - 1].splice(strokeIndex, 1); // Remove the stroke\n    }\n    if (updatedShotTypes[currentHole - 1]) {\n      updatedShotTypes[currentHole - 1].splice(strokeIndex, 1); // Remove the shot type\n    }\n    setStrokes(updatedStrokes);\n    setShotTypes(updatedShotTypes);\n  };\n  const togglePlayerForStroke = (strokeIndex, playerName) => {\n    const updatedStrokes = [...strokes];\n    const currentStrokePlayers = updatedStrokes[currentHole - 1][strokeIndex] || [];\n    if (currentStrokePlayers.includes(playerName)) {\n      // Remove the player if already selected\n      updatedStrokes[currentHole - 1][strokeIndex] = currentStrokePlayers.filter(name => name !== playerName);\n    } else {\n      // Add the player if not already selected\n      updatedStrokes[currentHole - 1][strokeIndex] = [...currentStrokePlayers, playerName];\n    }\n    setStrokes(updatedStrokes);\n  };\n  const selectShotType = (strokeIndex, shotType) => {\n    const updatedShotTypes = [...shotTypes];\n    const currentPlayers = strokes[currentHole - 1][strokeIndex] || [];\n    if (shotType === 'Gimme' || shotType === 'Water Hazard') {\n      // Allow \"Gimme\" and \"Water Hazard\" to be selected without players\n      updatedShotTypes[currentHole - 1][strokeIndex] = [shotType];\n    } else {\n      // Assign the shot type to each selected player for this stroke\n      updatedShotTypes[currentHole - 1][strokeIndex] = currentPlayers.map(() => shotType);\n    }\n    setShotTypes(updatedShotTypes);\n  };\n  const nextHole = () => {\n    if (currentHole < 18) {\n      setCurrentHole(currentHole + 1);\n\n      // Initialize strokes and shot types for the next hole if not already present\n      if (!strokes[currentHole]) {\n        setStrokes([...strokes, []]);\n      }\n      if (!shotTypes[currentHole]) {\n        setShotTypes([...shotTypes, []]);\n      }\n    } else {\n      alert('Game Over!');\n    }\n  };\n  const previousHole = () => {\n    if (currentHole > 1) {\n      setCurrentHole(currentHole - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      maxWidth: '1200px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Hole, {\n      holeNumber: currentHole,\n      courseInfo: {\n        name: courseInfo.name,\n        par: courseInfo.par,\n        yardage: courseInfo.yardage\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px'\n      },\n      children: [\"Hole \", currentHole, \" - Total Strokes: \", totalStrokes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflowX: 'auto',\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          margin: '0 auto',\n          borderCollapse: 'collapse',\n          width: '100%',\n          maxWidth: '100%',\n          backgroundColor: '#ffffff',\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: '#1976d2',\n              color: 'white'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '10px',\n                textAlign: 'left',\n                whiteSpace: 'nowrap'\n              },\n              children: \"Stroke\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '10px',\n                textAlign: 'left',\n                whiteSpace: 'nowrap'\n              },\n              children: \"Player\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '10px',\n                textAlign: 'left',\n                whiteSpace: 'nowrap'\n              },\n              children: \"Shot Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: (_strokes = strokes[currentHole - 1]) === null || _strokes === void 0 ? void 0 : _strokes.map((strokePlayers, index) => {\n            var _shotTypes, _shotTypes$index;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: '10px',\n                  border: '1px solid #ccc',\n                  whiteSpace: 'nowrap'\n                },\n                children: [\"Stroke \", index + 1, ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: () => removeStroke(index),\n                  style: {\n                    cursor: 'pointer',\n                    color: 'red',\n                    marginLeft: '10px',\n                    fontSize: '1.2rem'\n                  },\n                  title: \"Remove Stroke\",\n                  children: \"\\uD83D\\uDDD1\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: '10px',\n                  border: '1px solid #ccc',\n                  whiteSpace: 'nowrap'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    flexDirection: 'column',\n                    gap: '5px'\n                  },\n                  children: players.map(playerName => /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => togglePlayerForStroke(index, playerName),\n                    style: {\n                      padding: '10px',\n                      backgroundColor: strokePlayers !== null && strokePlayers !== void 0 && strokePlayers.includes(playerName) ? '#1976d2' : '#ccc',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '5px',\n                      cursor: 'pointer',\n                      textAlign: 'center'\n                    },\n                    children: playerName\n                  }, playerName, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: '10px',\n                  border: '1px solid #ccc',\n                  whiteSpace: 'nowrap'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: ((_shotTypes = shotTypes[currentHole - 1]) === null || _shotTypes === void 0 ? void 0 : (_shotTypes$index = _shotTypes[index]) === null || _shotTypes$index === void 0 ? void 0 : _shotTypes$index[0]) || '',\n                  onChange: e => selectShotType(index, e.target.value),\n                  style: {\n                    padding: '5px',\n                    fontSize: '14px',\n                    borderRadius: '5px',\n                    border: '1px solid #ccc',\n                    maxWidth: '150px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    disabled: true,\n                    children: \"Select Shot Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 41\n                  }, this), shotTypeOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: option,\n                    children: option\n                  }, option, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 45\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 33\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addStroke,\n        style: {\n          padding: '10px 20px',\n          margin: '10px',\n          backgroundColor: '#1976d2',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: \"Add Stroke\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: previousHole,\n        disabled: currentHole === 1,\n        style: {\n          padding: '10px 20px',\n          margin: '10px',\n          backgroundColor: currentHole === 1 ? '#ccc' : '#1976d2',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: currentHole === 1 ? 'not-allowed' : 'pointer'\n        },\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextHole,\n        style: {\n          padding: '10px 20px',\n          margin: '10px',\n          backgroundColor: '#1976d2',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: currentHole < 18 ? 'Next Hole' : 'Finish Game'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToLeaderboard,\n        style: {\n          padding: '10px 20px',\n          margin: '10px',\n          backgroundColor: '#1976d2',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: \"Leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }, this);\n};\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","Hole","jsxDEV","_jsxDEV","Game","players","strokes","setStrokes","shotTypes","setShotTypes","currentHole","setCurrentHole","goToLeaderboard","courseInfo","_strokes","shotTypeOptions","totalStrokes","reduce","total","hole","holeTotal","stroke","addStroke","updatedStrokes","updatedShotTypes","push","removeStroke","strokeIndex","splice","togglePlayerForStroke","playerName","currentStrokePlayers","includes","filter","name","selectShotType","shotType","currentPlayers","map","nextHole","alert","previousHole","style","padding","maxWidth","margin","children","holeNumber","par","yardage","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","marginBottom","overflowX","borderCollapse","width","backgroundColor","boxShadow","color","whiteSpace","strokePlayers","index","_shotTypes","_shotTypes$index","border","onClick","cursor","marginLeft","fontSize","title","display","flexDirection","gap","borderRadius","value","onChange","e","target","disabled","option","_c","$RefreshReg$"],"sources":["C:/Users/cball/Desktop/scrambling/golf-scorecard-app/src/components/Game.tsx"],"sourcesContent":["import React from 'react';\r\nimport Hole from './Hole';\r\n\r\ninterface GameProps {\r\n    players: string[];\r\n    strokes: string[][][]; // Tracks selected players for each stroke\r\n    setStrokes: React.Dispatch<React.SetStateAction<string[][][]>>;\r\n    shotTypes: string[][][]; // Tracks shot types for each stroke\r\n    setShotTypes: React.Dispatch<React.SetStateAction<string[][][]>>;\r\n    currentHole: number;\r\n    setCurrentHole: React.Dispatch<React.SetStateAction<number>>;\r\n    goToLeaderboard: () => void;\r\n    courseInfo: {\r\n        name: string;\r\n        par: number;\r\n        yardage: number;\r\n    };\r\n}\r\n\r\nconst Game: React.FC<GameProps> = ({\r\n    players,\r\n    strokes,\r\n    setStrokes,\r\n    shotTypes,\r\n    setShotTypes,\r\n    currentHole,\r\n    setCurrentHole,\r\n    goToLeaderboard,\r\n    courseInfo,\r\n}) => {\r\n    const shotTypeOptions = [\r\n        'Drive',\r\n        'Par 3',\r\n        'Hybrid',\r\n        'Iron',\r\n        'Approach',\r\n        'Chip',\r\n        'Putt',\r\n        'Gimme', // Added Gimme as a shot type option\r\n        'Water Hazard',\r\n    ];\r\n\r\n    // Calculate the cumulative strokes across all holes\r\n    const totalStrokes = shotTypes.reduce((total, hole) => {\r\n        return (\r\n            total +\r\n            hole.reduce((holeTotal, stroke) => {\r\n                // Count only strokes where a shot type is selected\r\n                return holeTotal + (stroke[0] ? 1 : 0);\r\n            }, 0)\r\n        );\r\n    }, 0);\r\n\r\n    const addStroke = () => {\r\n        const updatedStrokes = [...strokes];\r\n        const updatedShotTypes = [...shotTypes];\r\n\r\n        if (!updatedStrokes[currentHole - 1]) {\r\n            updatedStrokes[currentHole - 1] = [];\r\n        }\r\n        if (!updatedShotTypes[currentHole - 1]) {\r\n            updatedShotTypes[currentHole - 1] = [];\r\n        }\r\n\r\n        updatedStrokes[currentHole - 1].push([]); // Add a new stroke for the current hole\r\n        updatedShotTypes[currentHole - 1].push([]); // Add a new shot type for the current hole\r\n\r\n        setStrokes(updatedStrokes);\r\n        setShotTypes(updatedShotTypes);\r\n    };\r\n\r\n    const removeStroke = (strokeIndex: number) => {\r\n        const updatedStrokes = [...strokes];\r\n        const updatedShotTypes = [...shotTypes];\r\n\r\n        if (updatedStrokes[currentHole - 1]) {\r\n            updatedStrokes[currentHole - 1].splice(strokeIndex, 1); // Remove the stroke\r\n        }\r\n        if (updatedShotTypes[currentHole - 1]) {\r\n            updatedShotTypes[currentHole - 1].splice(strokeIndex, 1); // Remove the shot type\r\n        }\r\n\r\n        setStrokes(updatedStrokes);\r\n        setShotTypes(updatedShotTypes);\r\n    };\r\n\r\n    const togglePlayerForStroke = (strokeIndex: number, playerName: string) => {\r\n        const updatedStrokes = [...strokes];\r\n        const currentStrokePlayers = updatedStrokes[currentHole - 1][strokeIndex] || [];\r\n\r\n        if (currentStrokePlayers.includes(playerName)) {\r\n            // Remove the player if already selected\r\n            updatedStrokes[currentHole - 1][strokeIndex] = currentStrokePlayers.filter(\r\n                (name) => name !== playerName\r\n            );\r\n        } else {\r\n            // Add the player if not already selected\r\n            updatedStrokes[currentHole - 1][strokeIndex] = [...currentStrokePlayers, playerName];\r\n        }\r\n\r\n        setStrokes(updatedStrokes);\r\n    };\r\n\r\n    const selectShotType = (strokeIndex: number, shotType: string) => {\r\n        const updatedShotTypes = [...shotTypes];\r\n        const currentPlayers = strokes[currentHole - 1][strokeIndex] || [];\r\n\r\n        if (shotType === 'Gimme' || shotType === 'Water Hazard') {\r\n            // Allow \"Gimme\" and \"Water Hazard\" to be selected without players\r\n            updatedShotTypes[currentHole - 1][strokeIndex] = [shotType];\r\n        } else {\r\n            // Assign the shot type to each selected player for this stroke\r\n            updatedShotTypes[currentHole - 1][strokeIndex] = currentPlayers.map(() => shotType);\r\n        }\r\n\r\n        setShotTypes(updatedShotTypes);\r\n    };\r\n\r\n    const nextHole = () => {\r\n        if (currentHole < 18) {\r\n            setCurrentHole(currentHole + 1);\r\n\r\n            // Initialize strokes and shot types for the next hole if not already present\r\n            if (!strokes[currentHole]) {\r\n                setStrokes([...strokes, []]);\r\n            }\r\n            if (!shotTypes[currentHole]) {\r\n                setShotTypes([...shotTypes, []]);\r\n            }\r\n        } else {\r\n            alert('Game Over!');\r\n        }\r\n    };\r\n\r\n    const previousHole = () => {\r\n        if (currentHole > 1) {\r\n            setCurrentHole(currentHole - 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: '20px', maxWidth: '1200px', margin: '0 auto' }}>\r\n            {/* Add this line to show hole info */}\r\n            <Hole\r\n                holeNumber={currentHole}\r\n                courseInfo={{\r\n                    name: courseInfo.name,\r\n                    par: courseInfo.par,\r\n                    yardage: courseInfo.yardage,\r\n                }}\r\n            />\r\n            <h1 style={{ textAlign: 'center', marginBottom: '20px' }}>\r\n                Hole {currentHole} - Total Strokes: {totalStrokes}\r\n            </h1>\r\n            <div style={{ overflowX: 'auto', marginBottom: '20px' }}>\r\n                <table\r\n                    style={{\r\n                        margin: '0 auto',\r\n                        borderCollapse: 'collapse',\r\n                        width: '100%',\r\n                        maxWidth: '100%',\r\n                        backgroundColor: '#ffffff',\r\n                        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n                    }}\r\n                >\r\n                    <thead>\r\n                        <tr style={{ backgroundColor: '#1976d2', color: 'white' }}>\r\n                            <th style={{ padding: '10px', textAlign: 'left', whiteSpace: 'nowrap' }}>Stroke</th>\r\n                            <th style={{ padding: '10px', textAlign: 'left', whiteSpace: 'nowrap' }}>Player</th>\r\n                            <th style={{ padding: '10px', textAlign: 'left', whiteSpace: 'nowrap' }}>Shot Type</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {strokes[currentHole - 1]?.map((strokePlayers, index) => (\r\n                            <tr key={index}>\r\n                                <td style={{ padding: '10px', border: '1px solid #ccc', whiteSpace: 'nowrap' }}>\r\n                                    Stroke {index + 1}{' '}\r\n                                    <span\r\n                                        onClick={() => removeStroke(index)}\r\n                                        style={{\r\n                                            cursor: 'pointer',\r\n                                            color: 'red',\r\n                                            marginLeft: '10px',\r\n                                            fontSize: '1.2rem',\r\n                                        }}\r\n                                        title=\"Remove Stroke\"\r\n                                    >\r\n                                        🗑️\r\n                                    </span>\r\n                                </td>\r\n                                <td style={{ padding: '10px', border: '1px solid #ccc', whiteSpace: 'nowrap' }}>\r\n                                    <div style={{ display: 'flex', flexDirection: 'column', gap: '5px' }}>\r\n                                        {players.map((playerName) => (\r\n                                            <button\r\n                                                key={playerName}\r\n                                                onClick={() => togglePlayerForStroke(index, playerName)}\r\n                                                style={{\r\n                                                    padding: '10px',\r\n                                                    backgroundColor: strokePlayers?.includes(playerName)\r\n                                                        ? '#1976d2'\r\n                                                        : '#ccc',\r\n                                                    color: 'white',\r\n                                                    border: 'none',\r\n                                                    borderRadius: '5px',\r\n                                                    cursor: 'pointer',\r\n                                                    textAlign: 'center',\r\n                                                }}\r\n                                            >\r\n                                                {playerName}\r\n                                            </button>\r\n                                        ))}\r\n                                    </div>\r\n                                </td>\r\n                                <td style={{ padding: '10px', border: '1px solid #ccc', whiteSpace: 'nowrap' }}>\r\n                                    <select\r\n                                        value={shotTypes[currentHole - 1]?.[index]?.[0] || ''}\r\n                                        onChange={(e) => selectShotType(index, e.target.value)}\r\n                                        style={{\r\n                                            padding: '5px',\r\n                                            fontSize: '14px',\r\n                                            borderRadius: '5px',\r\n                                            border: '1px solid #ccc',\r\n                                            maxWidth: '150px',\r\n                                        }}\r\n                                    >\r\n                                        <option value=\"\" disabled>\r\n                                            Select Shot Type\r\n                                        </option>\r\n                                        {shotTypeOptions.map((option) => (\r\n                                            <option key={option} value={option}>\r\n                                                {option}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div style={{ textAlign: 'center' }}>\r\n                <button\r\n                    onClick={addStroke}\r\n                    style={{\r\n                        padding: '10px 20px',\r\n                        margin: '10px',\r\n                        backgroundColor: '#1976d2',\r\n                        color: 'white',\r\n                        border: 'none',\r\n                        borderRadius: '5px',\r\n                        cursor: 'pointer',\r\n                    }}\r\n                >\r\n                    Add Stroke\r\n                </button>\r\n                <button\r\n                    onClick={previousHole}\r\n                    disabled={currentHole === 1}\r\n                    style={{\r\n                        padding: '10px 20px',\r\n                        margin: '10px',\r\n                        backgroundColor: currentHole === 1 ? '#ccc' : '#1976d2',\r\n                        color: 'white',\r\n                        border: 'none',\r\n                        borderRadius: '5px',\r\n                        cursor: currentHole === 1 ? 'not-allowed' : 'pointer',\r\n                    }}\r\n                >\r\n                    Back\r\n                </button>\r\n                <button\r\n                    onClick={nextHole}\r\n                    style={{\r\n                        padding: '10px 20px',\r\n                        margin: '10px',\r\n                        backgroundColor: '#1976d2',\r\n                        color: 'white',\r\n                        border: 'none',\r\n                        borderRadius: '5px',\r\n                        cursor: 'pointer',\r\n                    }}\r\n                >\r\n                    {currentHole < 18 ? 'Next Hole' : 'Finish Game'}\r\n                </button>\r\n                <button\r\n                    onClick={goToLeaderboard}\r\n                    style={{\r\n                        padding: '10px 20px',\r\n                        margin: '10px',\r\n                        backgroundColor: '#1976d2',\r\n                        color: 'white',\r\n                        border: 'none',\r\n                        borderRadius: '5px',\r\n                        cursor: 'pointer',\r\n                    }}\r\n                >\r\n                    Leaderboard\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}