{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cball\\\\Desktop\\\\scrambling\\\\golf-scorecard-app\\\\src\\\\components\\\\Leaderboard.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Leaderboard = ({\n  players,\n  strokes,\n  shotTypes,\n  goToGame\n}) => {\n  const shotTypeOptions = ['Drive', 'Par 3', 'Hybrid', 'Iron', 'Approach', 'Chip', 'Putt']; // Exclude \"Water Hazard\"\n\n  const calculateScores = () => {\n    const scores = {};\n\n    // Initialize scores for each player and shot type\n    players.forEach(player => {\n      scores[player] = {};\n      shotTypeOptions.forEach(shotType => {\n        scores[player][shotType] = 0;\n      });\n    });\n\n    // Calculate scores based on strokes and shot types\n    strokes.forEach((hole, holeIndex) => {\n      hole.forEach((player, strokeIndex) => {\n        var _shotTypes$holeIndex;\n        const shotType = (_shotTypes$holeIndex = shotTypes[holeIndex]) === null || _shotTypes$holeIndex === void 0 ? void 0 : _shotTypes$holeIndex[strokeIndex];\n        if (player && shotType && shotTypeOptions.includes(shotType)) {\n          scores[player][shotType] += 1; // Increment the score for the player and shot type\n        }\n      });\n    });\n    return scores;\n  };\n  const scores = calculateScores();\n\n  // Find the player with the highest total score\n  const getTotalScore = player => shotTypeOptions.reduce((total, shotType) => total + scores[player][shotType], 0);\n  const leader = players.reduce((prev, curr) => getTotalScore(curr) > getTotalScore(prev) ? curr : prev);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: '#e8f5e9',\n      padding: '20px',\n      borderRadius: '10px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        color: '#388e3c',\n        fontSize: '2.5rem'\n      },\n      children: \"\\uD83C\\uDFCC\\uFE0F\\u200D\\u2642\\uFE0F Golf Leaderboard \\u26F3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        margin: '20px auto',\n        borderCollapse: 'collapse',\n        width: '90%',\n        backgroundColor: '#ffffff',\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n        borderRadius: '10px',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            backgroundColor: '#388e3c',\n            color: 'white'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: '10px',\n              border: '1px solid #ccc'\n            },\n            children: \"Player\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), shotTypeOptions.map(shotType => /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: '10px',\n              border: '1px solid #ccc'\n            },\n            children: shotType\n          }, shotType, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: '10px',\n              border: '1px solid #ccc'\n            },\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: players.map(player => /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            backgroundColor: player === leader ? '#c8e6c9' : 'white',\n            fontWeight: player === leader ? 'bold' : 'normal'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: '10px',\n              border: '1px solid #ccc'\n            },\n            children: [player, \" \", player === leader && '🏆']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), shotTypeOptions.map(shotType => /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: '10px',\n              border: '1px solid #ccc',\n              textAlign: 'center'\n            },\n            children: scores[player][shotType]\n          }, shotType, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: '10px',\n              border: '1px solid #ccc',\n              textAlign: 'center',\n              backgroundColor: '#f1f8e9'\n            },\n            children: getTotalScore(player)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this)]\n        }, player, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goToGame,\n      style: {\n        display: 'block',\n        margin: '20px auto',\n        padding: '10px 20px',\n        backgroundColor: '#388e3c',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px',\n        fontSize: '16px',\n        cursor: 'pointer',\n        transition: 'background-color 0.3s ease'\n      },\n      children: \"Back to Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Leaderboard","players","strokes","shotTypes","goToGame","shotTypeOptions","calculateScores","scores","forEach","player","shotType","hole","holeIndex","strokeIndex","_shotTypes$holeIndex","includes","getTotalScore","reduce","total","leader","prev","curr","style","backgroundColor","padding","borderRadius","children","textAlign","color","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","margin","borderCollapse","width","boxShadow","overflow","border","map","fontWeight","onClick","display","cursor","transition","_c","$RefreshReg$"],"sources":["C:/Users/cball/Desktop/scrambling/golf-scorecard-app/src/components/Leaderboard.tsx"],"sourcesContent":["import React from 'react';\r\n\r\ninterface LeaderboardProps {\r\n    players: string[];\r\n    strokes: string[][];\r\n    shotTypes: string[][];\r\n    goToGame: () => void;\r\n}\r\n\r\nconst Leaderboard: React.FC<LeaderboardProps> = ({ players, strokes, shotTypes, goToGame }) => {\r\n    const shotTypeOptions = [\r\n        'Drive',\r\n        'Par 3',\r\n        'Hybrid',\r\n        'Iron',\r\n        'Approach',\r\n        'Chip',\r\n        'Putt',\r\n    ]; // Exclude \"Water Hazard\"\r\n\r\n    const calculateScores = () => {\r\n        const scores: { [player: string]: { [shotType: string]: number } } = {};\r\n\r\n        // Initialize scores for each player and shot type\r\n        players.forEach((player) => {\r\n            scores[player] = {};\r\n            shotTypeOptions.forEach((shotType) => {\r\n                scores[player][shotType] = 0;\r\n            });\r\n        });\r\n\r\n        // Calculate scores based on strokes and shot types\r\n        strokes.forEach((hole, holeIndex) => {\r\n            hole.forEach((player, strokeIndex) => {\r\n                const shotType = shotTypes[holeIndex]?.[strokeIndex];\r\n                if (player && shotType && shotTypeOptions.includes(shotType)) {\r\n                    scores[player][shotType] += 1; // Increment the score for the player and shot type\r\n                }\r\n            });\r\n        });\r\n\r\n        return scores;\r\n    };\r\n\r\n    const scores = calculateScores();\r\n\r\n    // Find the player with the highest total score\r\n    const getTotalScore = (player: string) =>\r\n        shotTypeOptions.reduce((total, shotType) => total + scores[player][shotType], 0);\r\n\r\n    const leader = players.reduce((prev, curr) =>\r\n        getTotalScore(curr) > getTotalScore(prev) ? curr : prev\r\n    );\r\n\r\n    return (\r\n        <div style={{ backgroundColor: '#e8f5e9', padding: '20px', borderRadius: '10px' }}>\r\n            <h1 style={{ textAlign: 'center', color: '#388e3c', fontSize: '2.5rem' }}>\r\n                🏌️‍♂️ Golf Leaderboard ⛳\r\n            </h1>\r\n            <table\r\n                style={{\r\n                    margin: '20px auto',\r\n                    borderCollapse: 'collapse',\r\n                    width: '90%',\r\n                    backgroundColor: '#ffffff',\r\n                    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n                    borderRadius: '10px',\r\n                    overflow: 'hidden',\r\n                }}\r\n            >\r\n                <thead>\r\n                    <tr style={{ backgroundColor: '#388e3c', color: 'white' }}>\r\n                        <th style={{ padding: '10px', border: '1px solid #ccc' }}>Player</th>\r\n                        {shotTypeOptions.map((shotType) => (\r\n                            <th key={shotType} style={{ padding: '10px', border: '1px solid #ccc' }}>\r\n                                {shotType}\r\n                            </th>\r\n                        ))}\r\n                        <th style={{ padding: '10px', border: '1px solid #ccc' }}>Total</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {players.map((player) => (\r\n                        <tr\r\n                            key={player}\r\n                            style={{\r\n                                backgroundColor: player === leader ? '#c8e6c9' : 'white',\r\n                                fontWeight: player === leader ? 'bold' : 'normal',\r\n                            }}\r\n                        >\r\n                            <td style={{ padding: '10px', border: '1px solid #ccc' }}>\r\n                                {player} {player === leader && '🏆'}\r\n                            </td>\r\n                            {shotTypeOptions.map((shotType) => (\r\n                                <td\r\n                                    key={shotType}\r\n                                    style={{ padding: '10px', border: '1px solid #ccc', textAlign: 'center' }}\r\n                                >\r\n                                    {scores[player][shotType]}\r\n                                </td>\r\n                            ))}\r\n                            <td\r\n                                style={{\r\n                                    padding: '10px',\r\n                                    border: '1px solid #ccc',\r\n                                    textAlign: 'center',\r\n                                    backgroundColor: '#f1f8e9',\r\n                                }}\r\n                            >\r\n                                {getTotalScore(player)}\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <button\r\n                onClick={goToGame}\r\n                style={{\r\n                    display: 'block',\r\n                    margin: '20px auto',\r\n                    padding: '10px 20px',\r\n                    backgroundColor: '#388e3c',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    borderRadius: '5px',\r\n                    fontSize: '16px',\r\n                    cursor: 'pointer',\r\n                    transition: 'background-color 0.3s ease',\r\n                }}\r\n            >\r\n                Back to Game\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Leaderboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}