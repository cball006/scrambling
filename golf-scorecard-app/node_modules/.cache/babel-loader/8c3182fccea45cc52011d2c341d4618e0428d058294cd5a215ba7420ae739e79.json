{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cball\\\\Desktop\\\\scrambling\\\\golf-scorecard-app\\\\src\\\\components\\\\Game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = ({\n  players\n}) => {\n  _s();\n  const [currentHole, setCurrentHole] = useState(1);\n  const [strokes, setStrokes] = useState(players.map(() => Array(18).fill(0)) // Initialize strokes for 18 holes\n  );\n  const incrementStroke = playerIndex => {\n    const updatedStrokes = [...strokes];\n    updatedStrokes[playerIndex][currentHole - 1] += 1;\n    setStrokes(updatedStrokes);\n  };\n  const nextHole = () => {\n    if (currentHole < 18) {\n      setCurrentHole(currentHole + 1);\n    } else {\n      alert('Game Over!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Hole \", currentHole]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        margin: '0 auto',\n        borderCollapse: 'collapse',\n        width: '80%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              border: '1px solid #ccc',\n              padding: '10px'\n            },\n            children: \"Player\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              border: '1px solid #ccc',\n              padding: '10px'\n            },\n            children: \"Strokes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              border: '1px solid #ccc',\n              padding: '10px'\n            },\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: '1px solid #ccc',\n              padding: '10px'\n            },\n            children: player\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: '1px solid #ccc',\n              padding: '10px'\n            },\n            children: strokes[index][currentHole - 1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: '1px solid #ccc',\n              padding: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => incrementStroke(index),\n              style: {\n                padding: '5px 10px',\n                backgroundColor: '#1976d2',\n                color: 'white',\n                border: 'none',\n                borderRadius: '5px',\n                cursor: 'pointer'\n              },\n              children: \"Add Stroke\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextHole,\n      style: {\n        marginTop: '20px',\n        padding: '10px 20px',\n        backgroundColor: '#1976d2',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px',\n        cursor: 'pointer'\n      },\n      children: currentHole < 18 ? 'Next Hole' : 'Finish Game'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"Pz1+y5a7sCN2h9vFfGJIlF8zJtY=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Game","players","_s","currentHole","setCurrentHole","strokes","setStrokes","map","Array","fill","incrementStroke","playerIndex","updatedStrokes","nextHole","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","style","margin","borderCollapse","width","border","padding","player","index","onClick","backgroundColor","color","borderRadius","cursor","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/cball/Desktop/scrambling/golf-scorecard-app/src/components/Game.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\ninterface GameProps {\r\n    players: string[];\r\n}\r\n\r\nconst Game: React.FC<GameProps> = ({ players }) => {\r\n    const [currentHole, setCurrentHole] = useState(1);\r\n    const [strokes, setStrokes] = useState(\r\n        players.map(() => Array(18).fill(0)) // Initialize strokes for 18 holes\r\n    );\r\n\r\n    const incrementStroke = (playerIndex: number) => {\r\n        const updatedStrokes = [...strokes];\r\n        updatedStrokes[playerIndex][currentHole - 1] += 1;\r\n        setStrokes(updatedStrokes);\r\n    };\r\n\r\n    const nextHole = () => {\r\n        if (currentHole < 18) {\r\n            setCurrentHole(currentHole + 1);\r\n        } else {\r\n            alert('Game Over!');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Hole {currentHole}</h1>\r\n            <table style={{ margin: '0 auto', borderCollapse: 'collapse', width: '80%' }}>\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{ border: '1px solid #ccc', padding: '10px' }}>Player</th>\r\n                        <th style={{ border: '1px solid #ccc', padding: '10px' }}>Strokes</th>\r\n                        <th style={{ border: '1px solid #ccc', padding: '10px' }}>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {players.map((player, index) => (\r\n                        <tr key={index}>\r\n                            <td style={{ border: '1px solid #ccc', padding: '10px' }}>{player}</td>\r\n                            <td style={{ border: '1px solid #ccc', padding: '10px' }}>\r\n                                {strokes[index][currentHole - 1]}\r\n                            </td>\r\n                            <td style={{ border: '1px solid #ccc', padding: '10px' }}>\r\n                                <button\r\n                                    onClick={() => incrementStroke(index)}\r\n                                    style={{\r\n                                        padding: '5px 10px',\r\n                                        backgroundColor: '#1976d2',\r\n                                        color: 'white',\r\n                                        border: 'none',\r\n                                        borderRadius: '5px',\r\n                                        cursor: 'pointer',\r\n                                    }}\r\n                                >\r\n                                    Add Stroke\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <button\r\n                onClick={nextHole}\r\n                style={{\r\n                    marginTop: '20px',\r\n                    padding: '10px 20px',\r\n                    backgroundColor: '#1976d2',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    borderRadius: '5px',\r\n                    cursor: 'pointer',\r\n                }}\r\n            >\r\n                {currentHole < 18 ? 'Next Hole' : 'Finish Game'}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}